// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/ydb/v1/database.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace grpsApp1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/ydb/v1/database.proto</summary>
  public static partial class DatabaseReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/ydb/v1/database.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DatabaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJ5YW5kZXgvY2xvdWQveWRiL3YxL2RhdGFiYXNlLnByb3RvEhN5YW5kZXgu",
            "Y2xvdWQueWRiLnYxGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "Gh15YW5kZXgvY2xvdWQvdmFsaWRhdGlvbi5wcm90bxogeWFuZGV4L2Nsb3Vk",
            "L3lkYi92MS9iYWNrdXAucHJvdG8ilAgKCERhdGFiYXNlEgoKAmlkGAEgASgJ",
            "EhEKCWZvbGRlcl9pZBgCIAEoCRIuCgpjcmVhdGVkX2F0GAMgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIMCgRuYW1lGAQgASgJEhMKC2Rlc2Ny",
            "aXB0aW9uGAUgASgJEjQKBnN0YXR1cxgGIAEoDjIkLnlhbmRleC5jbG91ZC55",
            "ZGIudjEuRGF0YWJhc2UuU3RhdHVzEhAKCGVuZHBvaW50GAggASgJEhoKEnJl",
            "c291cmNlX3ByZXNldF9pZBgJIAEoCRI6Cg5zdG9yYWdlX2NvbmZpZxgKIAEo",
            "CzIiLnlhbmRleC5jbG91ZC55ZGIudjEuU3RvcmFnZUNvbmZpZxI2CgxzY2Fs",
            "ZV9wb2xpY3kYCyABKAsyIC55YW5kZXguY2xvdWQueWRiLnYxLlNjYWxlUG9s",
            "aWN5EhIKCm5ldHdvcmtfaWQYDCABKAkSEgoKc3VibmV0X2lkcxgNIAMoCRI8",
            "Cg56b25hbF9kYXRhYmFzZRgOIAEoCzIiLnlhbmRleC5jbG91ZC55ZGIudjEu",
            "Wm9uYWxEYXRhYmFzZUgAEkIKEXJlZ2lvbmFsX2RhdGFiYXNlGA8gASgLMiUu",
            "eWFuZGV4LmNsb3VkLnlkYi52MS5SZWdpb25hbERhdGFiYXNlSAASRAoSZGVk",
            "aWNhdGVkX2RhdGFiYXNlGBIgASgLMiYueWFuZGV4LmNsb3VkLnlkYi52MS5E",
            "ZWRpY2F0ZWREYXRhYmFzZUgAEkYKE3NlcnZlcmxlc3NfZGF0YWJhc2UYEyAB",
            "KAsyJy55YW5kZXguY2xvdWQueWRiLnYxLlNlcnZlcmxlc3NEYXRhYmFzZUgA",
            "EhkKEWFzc2lnbl9wdWJsaWNfaXBzGBAgASgIEhMKC2xvY2F0aW9uX2lkGBEg",
            "ASgJEjkKBmxhYmVscxgUIAMoCzIpLnlhbmRleC5jbG91ZC55ZGIudjEuRGF0",
            "YWJhc2UuTGFiZWxzRW50cnkSOAoNYmFja3VwX2NvbmZpZxgVIAEoCzIhLnlh",
            "bmRleC5jbG91ZC55ZGIudjEuQmFja3VwQ29uZmlnEh0KFWRvY3VtZW50X2Fw",
            "aV9lbmRwb2ludBgWIAEoCRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBIoEBCgZTdGF0dXMSFgoSU1RBVFVTX1VOU1BF",
            "Q0lGSUVEEAASEAoMUFJPVklTSU9OSU5HEAESCwoHUlVOTklORxACEgwKCFVQ",
            "REFUSU5HEAQSCQoFRVJST1IQBRIMCghERUxFVElORxAGEgwKCFNUQVJUSU5H",
            "EAcSCwoHU1RPUFBFRBAIQg8KDWRhdGFiYXNlX3R5cGUi5gEKEURlZGljYXRl",
            "ZERhdGFiYXNlEhoKEnJlc291cmNlX3ByZXNldF9pZBgBIAEoCRI6Cg5zdG9y",
            "YWdlX2NvbmZpZxgCIAEoCzIiLnlhbmRleC5jbG91ZC55ZGIudjEuU3RvcmFn",
            "ZUNvbmZpZxI2CgxzY2FsZV9wb2xpY3kYAyABKAsyIC55YW5kZXguY2xvdWQu",
            "eWRiLnYxLlNjYWxlUG9saWN5EhIKCm5ldHdvcmtfaWQYBCABKAkSEgoKc3Vi",
            "bmV0X2lkcxgFIAMoCRIZChFhc3NpZ25fcHVibGljX2lwcxgGIAEoCCIUChJT",
            "ZXJ2ZXJsZXNzRGF0YWJhc2UiJgoNWm9uYWxEYXRhYmFzZRIVCgd6b25lX2lk",
            "GAEgASgJQgToxzEBIisKEFJlZ2lvbmFsRGF0YWJhc2USFwoJcmVnaW9uX2lk",
            "GAEgASgJQgToxzEBIooBCgtTY2FsZVBvbGljeRJCCgtmaXhlZF9zY2FsZRgB",
            "IAEoCzIrLnlhbmRleC5jbG91ZC55ZGIudjEuU2NhbGVQb2xpY3kuRml4ZWRT",
            "Y2FsZUgAGiMKCkZpeGVkU2NhbGUSFQoEc2l6ZRgBIAEoA0IH+scxAz49MUIS",
            "CgpzY2FsZV90eXBlEgTAwTEBIlUKDVN0b3JhZ2VDb25maWcSRAoPc3RvcmFn",
            "ZV9vcHRpb25zGAEgAygLMiIueWFuZGV4LmNsb3VkLnlkYi52MS5TdG9yYWdl",
            "T3B0aW9uQgeCyDEDPj0xIj0KDVN0b3JhZ2VPcHRpb24SFwoPc3RvcmFnZV90",
            "eXBlX2lkGAEgASgJEhMKC2dyb3VwX2NvdW50GAIgASgDQmEKF3lhbmRleC5j",
            "bG91ZC5hcGkueWRiLnYxWjtnaXRodWIuY29tL3lhbmRleC1jbG91ZC9nby1n",
            "ZW5wcm90by95YW5kZXgvY2xvdWQveWRiL3YxO3lkYqoCCGdycHNBcHAxYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, global::grpsApp1.BackupReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::grpsApp1.Database), global::grpsApp1.Database.Parser, new[]{ "Id", "FolderId", "CreatedAt", "Name", "Description", "Status", "Endpoint", "ResourcePresetId", "StorageConfig", "ScalePolicy", "NetworkId", "SubnetIds", "ZonalDatabase", "RegionalDatabase", "DedicatedDatabase", "ServerlessDatabase", "AssignPublicIps", "LocationId", "Labels", "BackupConfig", "DocumentApiEndpoint" }, new[]{ "DatabaseType" }, new[]{ typeof(global::grpsApp1.Database.Types.Status) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpsApp1.DedicatedDatabase), global::grpsApp1.DedicatedDatabase.Parser, new[]{ "ResourcePresetId", "StorageConfig", "ScalePolicy", "NetworkId", "SubnetIds", "AssignPublicIps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpsApp1.ServerlessDatabase), global::grpsApp1.ServerlessDatabase.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpsApp1.ZonalDatabase), global::grpsApp1.ZonalDatabase.Parser, new[]{ "ZoneId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpsApp1.RegionalDatabase), global::grpsApp1.RegionalDatabase.Parser, new[]{ "RegionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpsApp1.ScalePolicy), global::grpsApp1.ScalePolicy.Parser, new[]{ "FixedScale" }, new[]{ "ScaleType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::grpsApp1.ScalePolicy.Types.FixedScale), global::grpsApp1.ScalePolicy.Types.FixedScale.Parser, new[]{ "Size" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpsApp1.StorageConfig), global::grpsApp1.StorageConfig.Parser, new[]{ "StorageOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpsApp1.StorageOption), global::grpsApp1.StorageOption.Parser, new[]{ "StorageTypeId", "GroupCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// YDB database.
  /// </summary>
  public sealed partial class Database : pb::IMessage<Database>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Database> _parser = new pb::MessageParser<Database>(() => new Database());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Database> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpsApp1.DatabaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database(Database other) : this() {
      id_ = other.id_;
      folderId_ = other.folderId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      status_ = other.status_;
      endpoint_ = other.endpoint_;
      resourcePresetId_ = other.resourcePresetId_;
      storageConfig_ = other.storageConfig_ != null ? other.storageConfig_.Clone() : null;
      scalePolicy_ = other.scalePolicy_ != null ? other.scalePolicy_.Clone() : null;
      networkId_ = other.networkId_;
      subnetIds_ = other.subnetIds_.Clone();
      assignPublicIps_ = other.assignPublicIps_;
      locationId_ = other.locationId_;
      labels_ = other.labels_.Clone();
      backupConfig_ = other.backupConfig_ != null ? other.backupConfig_.Clone() : null;
      documentApiEndpoint_ = other.documentApiEndpoint_;
      switch (other.DatabaseTypeCase) {
        case DatabaseTypeOneofCase.ZonalDatabase:
          ZonalDatabase = other.ZonalDatabase.Clone();
          break;
        case DatabaseTypeOneofCase.RegionalDatabase:
          RegionalDatabase = other.RegionalDatabase.Clone();
          break;
        case DatabaseTypeOneofCase.DedicatedDatabase:
          DedicatedDatabase = other.DedicatedDatabase.Clone();
          break;
        case DatabaseTypeOneofCase.ServerlessDatabase:
          ServerlessDatabase = other.ServerlessDatabase.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database Clone() {
      return new Database(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private string folderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private global::grpsApp1.Database.Types.Status status_ = global::grpsApp1.Database.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.Database.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 8;
    private string endpoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_preset_id" field.</summary>
    public const int ResourcePresetIdFieldNumber = 9;
    private string resourcePresetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourcePresetId {
      get { return resourcePresetId_; }
      set {
        resourcePresetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "storage_config" field.</summary>
    public const int StorageConfigFieldNumber = 10;
    private global::grpsApp1.StorageConfig storageConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.StorageConfig StorageConfig {
      get { return storageConfig_; }
      set {
        storageConfig_ = value;
      }
    }

    /// <summary>Field number for the "scale_policy" field.</summary>
    public const int ScalePolicyFieldNumber = 11;
    private global::grpsApp1.ScalePolicy scalePolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.ScalePolicy ScalePolicy {
      get { return scalePolicy_; }
      set {
        scalePolicy_ = value;
      }
    }

    /// <summary>Field number for the "network_id" field.</summary>
    public const int NetworkIdFieldNumber = 12;
    private string networkId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkId {
      get { return networkId_; }
      set {
        networkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnet_ids" field.</summary>
    public const int SubnetIdsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_subnetIds_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> subnetIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SubnetIds {
      get { return subnetIds_; }
    }

    /// <summary>Field number for the "zonal_database" field.</summary>
    public const int ZonalDatabaseFieldNumber = 14;
    /// <summary>
    /// deprecated field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.ZonalDatabase ZonalDatabase {
      get { return databaseTypeCase_ == DatabaseTypeOneofCase.ZonalDatabase ? (global::grpsApp1.ZonalDatabase) databaseType_ : null; }
      set {
        databaseType_ = value;
        databaseTypeCase_ = value == null ? DatabaseTypeOneofCase.None : DatabaseTypeOneofCase.ZonalDatabase;
      }
    }

    /// <summary>Field number for the "regional_database" field.</summary>
    public const int RegionalDatabaseFieldNumber = 15;
    /// <summary>
    /// deprecated field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.RegionalDatabase RegionalDatabase {
      get { return databaseTypeCase_ == DatabaseTypeOneofCase.RegionalDatabase ? (global::grpsApp1.RegionalDatabase) databaseType_ : null; }
      set {
        databaseType_ = value;
        databaseTypeCase_ = value == null ? DatabaseTypeOneofCase.None : DatabaseTypeOneofCase.RegionalDatabase;
      }
    }

    /// <summary>Field number for the "dedicated_database" field.</summary>
    public const int DedicatedDatabaseFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.DedicatedDatabase DedicatedDatabase {
      get { return databaseTypeCase_ == DatabaseTypeOneofCase.DedicatedDatabase ? (global::grpsApp1.DedicatedDatabase) databaseType_ : null; }
      set {
        databaseType_ = value;
        databaseTypeCase_ = value == null ? DatabaseTypeOneofCase.None : DatabaseTypeOneofCase.DedicatedDatabase;
      }
    }

    /// <summary>Field number for the "serverless_database" field.</summary>
    public const int ServerlessDatabaseFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.ServerlessDatabase ServerlessDatabase {
      get { return databaseTypeCase_ == DatabaseTypeOneofCase.ServerlessDatabase ? (global::grpsApp1.ServerlessDatabase) databaseType_ : null; }
      set {
        databaseType_ = value;
        databaseTypeCase_ = value == null ? DatabaseTypeOneofCase.None : DatabaseTypeOneofCase.ServerlessDatabase;
      }
    }

    /// <summary>Field number for the "assign_public_ips" field.</summary>
    public const int AssignPublicIpsFieldNumber = 16;
    private bool assignPublicIps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AssignPublicIps {
      get { return assignPublicIps_; }
      set {
        assignPublicIps_ = value;
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 17;
    private string locationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 20;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 162);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "backup_config" field.</summary>
    public const int BackupConfigFieldNumber = 21;
    private global::grpsApp1.BackupConfig backupConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.BackupConfig BackupConfig {
      get { return backupConfig_; }
      set {
        backupConfig_ = value;
      }
    }

    /// <summary>Field number for the "document_api_endpoint" field.</summary>
    public const int DocumentApiEndpointFieldNumber = 22;
    private string documentApiEndpoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocumentApiEndpoint {
      get { return documentApiEndpoint_; }
      set {
        documentApiEndpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object databaseType_;
    /// <summary>Enum of possible cases for the "database_type" oneof.</summary>
    public enum DatabaseTypeOneofCase {
      None = 0,
      ZonalDatabase = 14,
      RegionalDatabase = 15,
      DedicatedDatabase = 18,
      ServerlessDatabase = 19,
    }
    private DatabaseTypeOneofCase databaseTypeCase_ = DatabaseTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseTypeOneofCase DatabaseTypeCase {
      get { return databaseTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabaseType() {
      databaseTypeCase_ = DatabaseTypeOneofCase.None;
      databaseType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Database);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Database other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FolderId != other.FolderId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Status != other.Status) return false;
      if (Endpoint != other.Endpoint) return false;
      if (ResourcePresetId != other.ResourcePresetId) return false;
      if (!object.Equals(StorageConfig, other.StorageConfig)) return false;
      if (!object.Equals(ScalePolicy, other.ScalePolicy)) return false;
      if (NetworkId != other.NetworkId) return false;
      if(!subnetIds_.Equals(other.subnetIds_)) return false;
      if (!object.Equals(ZonalDatabase, other.ZonalDatabase)) return false;
      if (!object.Equals(RegionalDatabase, other.RegionalDatabase)) return false;
      if (!object.Equals(DedicatedDatabase, other.DedicatedDatabase)) return false;
      if (!object.Equals(ServerlessDatabase, other.ServerlessDatabase)) return false;
      if (AssignPublicIps != other.AssignPublicIps) return false;
      if (LocationId != other.LocationId) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(BackupConfig, other.BackupConfig)) return false;
      if (DocumentApiEndpoint != other.DocumentApiEndpoint) return false;
      if (DatabaseTypeCase != other.DatabaseTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Status != global::grpsApp1.Database.Types.Status.Unspecified) hash ^= Status.GetHashCode();
      if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
      if (ResourcePresetId.Length != 0) hash ^= ResourcePresetId.GetHashCode();
      if (storageConfig_ != null) hash ^= StorageConfig.GetHashCode();
      if (scalePolicy_ != null) hash ^= ScalePolicy.GetHashCode();
      if (NetworkId.Length != 0) hash ^= NetworkId.GetHashCode();
      hash ^= subnetIds_.GetHashCode();
      if (databaseTypeCase_ == DatabaseTypeOneofCase.ZonalDatabase) hash ^= ZonalDatabase.GetHashCode();
      if (databaseTypeCase_ == DatabaseTypeOneofCase.RegionalDatabase) hash ^= RegionalDatabase.GetHashCode();
      if (databaseTypeCase_ == DatabaseTypeOneofCase.DedicatedDatabase) hash ^= DedicatedDatabase.GetHashCode();
      if (databaseTypeCase_ == DatabaseTypeOneofCase.ServerlessDatabase) hash ^= ServerlessDatabase.GetHashCode();
      if (AssignPublicIps != false) hash ^= AssignPublicIps.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (backupConfig_ != null) hash ^= BackupConfig.GetHashCode();
      if (DocumentApiEndpoint.Length != 0) hash ^= DocumentApiEndpoint.GetHashCode();
      hash ^= (int) databaseTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FolderId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (Status != global::grpsApp1.Database.Types.Status.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Endpoint);
      }
      if (ResourcePresetId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ResourcePresetId);
      }
      if (storageConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StorageConfig);
      }
      if (scalePolicy_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ScalePolicy);
      }
      if (NetworkId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(NetworkId);
      }
      subnetIds_.WriteTo(output, _repeated_subnetIds_codec);
      if (databaseTypeCase_ == DatabaseTypeOneofCase.ZonalDatabase) {
        output.WriteRawTag(114);
        output.WriteMessage(ZonalDatabase);
      }
      if (databaseTypeCase_ == DatabaseTypeOneofCase.RegionalDatabase) {
        output.WriteRawTag(122);
        output.WriteMessage(RegionalDatabase);
      }
      if (AssignPublicIps != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(AssignPublicIps);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(LocationId);
      }
      if (databaseTypeCase_ == DatabaseTypeOneofCase.DedicatedDatabase) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(DedicatedDatabase);
      }
      if (databaseTypeCase_ == DatabaseTypeOneofCase.ServerlessDatabase) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(ServerlessDatabase);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (backupConfig_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(BackupConfig);
      }
      if (DocumentApiEndpoint.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(DocumentApiEndpoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FolderId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (Status != global::grpsApp1.Database.Types.Status.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Endpoint);
      }
      if (ResourcePresetId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ResourcePresetId);
      }
      if (storageConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StorageConfig);
      }
      if (scalePolicy_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ScalePolicy);
      }
      if (NetworkId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(NetworkId);
      }
      subnetIds_.WriteTo(ref output, _repeated_subnetIds_codec);
      if (databaseTypeCase_ == DatabaseTypeOneofCase.ZonalDatabase) {
        output.WriteRawTag(114);
        output.WriteMessage(ZonalDatabase);
      }
      if (databaseTypeCase_ == DatabaseTypeOneofCase.RegionalDatabase) {
        output.WriteRawTag(122);
        output.WriteMessage(RegionalDatabase);
      }
      if (AssignPublicIps != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(AssignPublicIps);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(LocationId);
      }
      if (databaseTypeCase_ == DatabaseTypeOneofCase.DedicatedDatabase) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(DedicatedDatabase);
      }
      if (databaseTypeCase_ == DatabaseTypeOneofCase.ServerlessDatabase) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(ServerlessDatabase);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (backupConfig_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(BackupConfig);
      }
      if (DocumentApiEndpoint.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(DocumentApiEndpoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Status != global::grpsApp1.Database.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Endpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (ResourcePresetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourcePresetId);
      }
      if (storageConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageConfig);
      }
      if (scalePolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScalePolicy);
      }
      if (NetworkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkId);
      }
      size += subnetIds_.CalculateSize(_repeated_subnetIds_codec);
      if (databaseTypeCase_ == DatabaseTypeOneofCase.ZonalDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZonalDatabase);
      }
      if (databaseTypeCase_ == DatabaseTypeOneofCase.RegionalDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegionalDatabase);
      }
      if (databaseTypeCase_ == DatabaseTypeOneofCase.DedicatedDatabase) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DedicatedDatabase);
      }
      if (databaseTypeCase_ == DatabaseTypeOneofCase.ServerlessDatabase) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ServerlessDatabase);
      }
      if (AssignPublicIps != false) {
        size += 2 + 1;
      }
      if (LocationId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (backupConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BackupConfig);
      }
      if (DocumentApiEndpoint.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DocumentApiEndpoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Database other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Status != global::grpsApp1.Database.Types.Status.Unspecified) {
        Status = other.Status;
      }
      if (other.Endpoint.Length != 0) {
        Endpoint = other.Endpoint;
      }
      if (other.ResourcePresetId.Length != 0) {
        ResourcePresetId = other.ResourcePresetId;
      }
      if (other.storageConfig_ != null) {
        if (storageConfig_ == null) {
          StorageConfig = new global::grpsApp1.StorageConfig();
        }
        StorageConfig.MergeFrom(other.StorageConfig);
      }
      if (other.scalePolicy_ != null) {
        if (scalePolicy_ == null) {
          ScalePolicy = new global::grpsApp1.ScalePolicy();
        }
        ScalePolicy.MergeFrom(other.ScalePolicy);
      }
      if (other.NetworkId.Length != 0) {
        NetworkId = other.NetworkId;
      }
      subnetIds_.Add(other.subnetIds_);
      if (other.AssignPublicIps != false) {
        AssignPublicIps = other.AssignPublicIps;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      labels_.Add(other.labels_);
      if (other.backupConfig_ != null) {
        if (backupConfig_ == null) {
          BackupConfig = new global::grpsApp1.BackupConfig();
        }
        BackupConfig.MergeFrom(other.BackupConfig);
      }
      if (other.DocumentApiEndpoint.Length != 0) {
        DocumentApiEndpoint = other.DocumentApiEndpoint;
      }
      switch (other.DatabaseTypeCase) {
        case DatabaseTypeOneofCase.ZonalDatabase:
          if (ZonalDatabase == null) {
            ZonalDatabase = new global::grpsApp1.ZonalDatabase();
          }
          ZonalDatabase.MergeFrom(other.ZonalDatabase);
          break;
        case DatabaseTypeOneofCase.RegionalDatabase:
          if (RegionalDatabase == null) {
            RegionalDatabase = new global::grpsApp1.RegionalDatabase();
          }
          RegionalDatabase.MergeFrom(other.RegionalDatabase);
          break;
        case DatabaseTypeOneofCase.DedicatedDatabase:
          if (DedicatedDatabase == null) {
            DedicatedDatabase = new global::grpsApp1.DedicatedDatabase();
          }
          DedicatedDatabase.MergeFrom(other.DedicatedDatabase);
          break;
        case DatabaseTypeOneofCase.ServerlessDatabase:
          if (ServerlessDatabase == null) {
            ServerlessDatabase = new global::grpsApp1.ServerlessDatabase();
          }
          ServerlessDatabase.MergeFrom(other.ServerlessDatabase);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FolderId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            Status = (global::grpsApp1.Database.Types.Status) input.ReadEnum();
            break;
          }
          case 66: {
            Endpoint = input.ReadString();
            break;
          }
          case 74: {
            ResourcePresetId = input.ReadString();
            break;
          }
          case 82: {
            if (storageConfig_ == null) {
              StorageConfig = new global::grpsApp1.StorageConfig();
            }
            input.ReadMessage(StorageConfig);
            break;
          }
          case 90: {
            if (scalePolicy_ == null) {
              ScalePolicy = new global::grpsApp1.ScalePolicy();
            }
            input.ReadMessage(ScalePolicy);
            break;
          }
          case 98: {
            NetworkId = input.ReadString();
            break;
          }
          case 106: {
            subnetIds_.AddEntriesFrom(input, _repeated_subnetIds_codec);
            break;
          }
          case 114: {
            global::grpsApp1.ZonalDatabase subBuilder = new global::grpsApp1.ZonalDatabase();
            if (databaseTypeCase_ == DatabaseTypeOneofCase.ZonalDatabase) {
              subBuilder.MergeFrom(ZonalDatabase);
            }
            input.ReadMessage(subBuilder);
            ZonalDatabase = subBuilder;
            break;
          }
          case 122: {
            global::grpsApp1.RegionalDatabase subBuilder = new global::grpsApp1.RegionalDatabase();
            if (databaseTypeCase_ == DatabaseTypeOneofCase.RegionalDatabase) {
              subBuilder.MergeFrom(RegionalDatabase);
            }
            input.ReadMessage(subBuilder);
            RegionalDatabase = subBuilder;
            break;
          }
          case 128: {
            AssignPublicIps = input.ReadBool();
            break;
          }
          case 138: {
            LocationId = input.ReadString();
            break;
          }
          case 146: {
            global::grpsApp1.DedicatedDatabase subBuilder = new global::grpsApp1.DedicatedDatabase();
            if (databaseTypeCase_ == DatabaseTypeOneofCase.DedicatedDatabase) {
              subBuilder.MergeFrom(DedicatedDatabase);
            }
            input.ReadMessage(subBuilder);
            DedicatedDatabase = subBuilder;
            break;
          }
          case 154: {
            global::grpsApp1.ServerlessDatabase subBuilder = new global::grpsApp1.ServerlessDatabase();
            if (databaseTypeCase_ == DatabaseTypeOneofCase.ServerlessDatabase) {
              subBuilder.MergeFrom(ServerlessDatabase);
            }
            input.ReadMessage(subBuilder);
            ServerlessDatabase = subBuilder;
            break;
          }
          case 162: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 170: {
            if (backupConfig_ == null) {
              BackupConfig = new global::grpsApp1.BackupConfig();
            }
            input.ReadMessage(BackupConfig);
            break;
          }
          case 178: {
            DocumentApiEndpoint = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FolderId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            Status = (global::grpsApp1.Database.Types.Status) input.ReadEnum();
            break;
          }
          case 66: {
            Endpoint = input.ReadString();
            break;
          }
          case 74: {
            ResourcePresetId = input.ReadString();
            break;
          }
          case 82: {
            if (storageConfig_ == null) {
              StorageConfig = new global::grpsApp1.StorageConfig();
            }
            input.ReadMessage(StorageConfig);
            break;
          }
          case 90: {
            if (scalePolicy_ == null) {
              ScalePolicy = new global::grpsApp1.ScalePolicy();
            }
            input.ReadMessage(ScalePolicy);
            break;
          }
          case 98: {
            NetworkId = input.ReadString();
            break;
          }
          case 106: {
            subnetIds_.AddEntriesFrom(ref input, _repeated_subnetIds_codec);
            break;
          }
          case 114: {
            global::grpsApp1.ZonalDatabase subBuilder = new global::grpsApp1.ZonalDatabase();
            if (databaseTypeCase_ == DatabaseTypeOneofCase.ZonalDatabase) {
              subBuilder.MergeFrom(ZonalDatabase);
            }
            input.ReadMessage(subBuilder);
            ZonalDatabase = subBuilder;
            break;
          }
          case 122: {
            global::grpsApp1.RegionalDatabase subBuilder = new global::grpsApp1.RegionalDatabase();
            if (databaseTypeCase_ == DatabaseTypeOneofCase.RegionalDatabase) {
              subBuilder.MergeFrom(RegionalDatabase);
            }
            input.ReadMessage(subBuilder);
            RegionalDatabase = subBuilder;
            break;
          }
          case 128: {
            AssignPublicIps = input.ReadBool();
            break;
          }
          case 138: {
            LocationId = input.ReadString();
            break;
          }
          case 146: {
            global::grpsApp1.DedicatedDatabase subBuilder = new global::grpsApp1.DedicatedDatabase();
            if (databaseTypeCase_ == DatabaseTypeOneofCase.DedicatedDatabase) {
              subBuilder.MergeFrom(DedicatedDatabase);
            }
            input.ReadMessage(subBuilder);
            DedicatedDatabase = subBuilder;
            break;
          }
          case 154: {
            global::grpsApp1.ServerlessDatabase subBuilder = new global::grpsApp1.ServerlessDatabase();
            if (databaseTypeCase_ == DatabaseTypeOneofCase.ServerlessDatabase) {
              subBuilder.MergeFrom(ServerlessDatabase);
            }
            input.ReadMessage(subBuilder);
            ServerlessDatabase = subBuilder;
            break;
          }
          case 162: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 170: {
            if (backupConfig_ == null) {
              BackupConfig = new global::grpsApp1.BackupConfig();
            }
            input.ReadMessage(BackupConfig);
            break;
          }
          case 178: {
            DocumentApiEndpoint = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Database message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        [pbr::OriginalName("RUNNING")] Running = 2,
        [pbr::OriginalName("UPDATING")] Updating = 4,
        [pbr::OriginalName("ERROR")] Error = 5,
        [pbr::OriginalName("DELETING")] Deleting = 6,
        [pbr::OriginalName("STARTING")] Starting = 7,
        [pbr::OriginalName("STOPPED")] Stopped = 8,
      }

    }
    #endregion

  }

  public sealed partial class DedicatedDatabase : pb::IMessage<DedicatedDatabase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DedicatedDatabase> _parser = new pb::MessageParser<DedicatedDatabase>(() => new DedicatedDatabase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DedicatedDatabase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpsApp1.DatabaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DedicatedDatabase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DedicatedDatabase(DedicatedDatabase other) : this() {
      resourcePresetId_ = other.resourcePresetId_;
      storageConfig_ = other.storageConfig_ != null ? other.storageConfig_.Clone() : null;
      scalePolicy_ = other.scalePolicy_ != null ? other.scalePolicy_.Clone() : null;
      networkId_ = other.networkId_;
      subnetIds_ = other.subnetIds_.Clone();
      assignPublicIps_ = other.assignPublicIps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DedicatedDatabase Clone() {
      return new DedicatedDatabase(this);
    }

    /// <summary>Field number for the "resource_preset_id" field.</summary>
    public const int ResourcePresetIdFieldNumber = 1;
    private string resourcePresetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourcePresetId {
      get { return resourcePresetId_; }
      set {
        resourcePresetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "storage_config" field.</summary>
    public const int StorageConfigFieldNumber = 2;
    private global::grpsApp1.StorageConfig storageConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.StorageConfig StorageConfig {
      get { return storageConfig_; }
      set {
        storageConfig_ = value;
      }
    }

    /// <summary>Field number for the "scale_policy" field.</summary>
    public const int ScalePolicyFieldNumber = 3;
    private global::grpsApp1.ScalePolicy scalePolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.ScalePolicy ScalePolicy {
      get { return scalePolicy_; }
      set {
        scalePolicy_ = value;
      }
    }

    /// <summary>Field number for the "network_id" field.</summary>
    public const int NetworkIdFieldNumber = 4;
    private string networkId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkId {
      get { return networkId_; }
      set {
        networkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnet_ids" field.</summary>
    public const int SubnetIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_subnetIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> subnetIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SubnetIds {
      get { return subnetIds_; }
    }

    /// <summary>Field number for the "assign_public_ips" field.</summary>
    public const int AssignPublicIpsFieldNumber = 6;
    private bool assignPublicIps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AssignPublicIps {
      get { return assignPublicIps_; }
      set {
        assignPublicIps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DedicatedDatabase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DedicatedDatabase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourcePresetId != other.ResourcePresetId) return false;
      if (!object.Equals(StorageConfig, other.StorageConfig)) return false;
      if (!object.Equals(ScalePolicy, other.ScalePolicy)) return false;
      if (NetworkId != other.NetworkId) return false;
      if(!subnetIds_.Equals(other.subnetIds_)) return false;
      if (AssignPublicIps != other.AssignPublicIps) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourcePresetId.Length != 0) hash ^= ResourcePresetId.GetHashCode();
      if (storageConfig_ != null) hash ^= StorageConfig.GetHashCode();
      if (scalePolicy_ != null) hash ^= ScalePolicy.GetHashCode();
      if (NetworkId.Length != 0) hash ^= NetworkId.GetHashCode();
      hash ^= subnetIds_.GetHashCode();
      if (AssignPublicIps != false) hash ^= AssignPublicIps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourcePresetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourcePresetId);
      }
      if (storageConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StorageConfig);
      }
      if (scalePolicy_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ScalePolicy);
      }
      if (NetworkId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NetworkId);
      }
      subnetIds_.WriteTo(output, _repeated_subnetIds_codec);
      if (AssignPublicIps != false) {
        output.WriteRawTag(48);
        output.WriteBool(AssignPublicIps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourcePresetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourcePresetId);
      }
      if (storageConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StorageConfig);
      }
      if (scalePolicy_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ScalePolicy);
      }
      if (NetworkId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NetworkId);
      }
      subnetIds_.WriteTo(ref output, _repeated_subnetIds_codec);
      if (AssignPublicIps != false) {
        output.WriteRawTag(48);
        output.WriteBool(AssignPublicIps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourcePresetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourcePresetId);
      }
      if (storageConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageConfig);
      }
      if (scalePolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScalePolicy);
      }
      if (NetworkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkId);
      }
      size += subnetIds_.CalculateSize(_repeated_subnetIds_codec);
      if (AssignPublicIps != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DedicatedDatabase other) {
      if (other == null) {
        return;
      }
      if (other.ResourcePresetId.Length != 0) {
        ResourcePresetId = other.ResourcePresetId;
      }
      if (other.storageConfig_ != null) {
        if (storageConfig_ == null) {
          StorageConfig = new global::grpsApp1.StorageConfig();
        }
        StorageConfig.MergeFrom(other.StorageConfig);
      }
      if (other.scalePolicy_ != null) {
        if (scalePolicy_ == null) {
          ScalePolicy = new global::grpsApp1.ScalePolicy();
        }
        ScalePolicy.MergeFrom(other.ScalePolicy);
      }
      if (other.NetworkId.Length != 0) {
        NetworkId = other.NetworkId;
      }
      subnetIds_.Add(other.subnetIds_);
      if (other.AssignPublicIps != false) {
        AssignPublicIps = other.AssignPublicIps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourcePresetId = input.ReadString();
            break;
          }
          case 18: {
            if (storageConfig_ == null) {
              StorageConfig = new global::grpsApp1.StorageConfig();
            }
            input.ReadMessage(StorageConfig);
            break;
          }
          case 26: {
            if (scalePolicy_ == null) {
              ScalePolicy = new global::grpsApp1.ScalePolicy();
            }
            input.ReadMessage(ScalePolicy);
            break;
          }
          case 34: {
            NetworkId = input.ReadString();
            break;
          }
          case 42: {
            subnetIds_.AddEntriesFrom(input, _repeated_subnetIds_codec);
            break;
          }
          case 48: {
            AssignPublicIps = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourcePresetId = input.ReadString();
            break;
          }
          case 18: {
            if (storageConfig_ == null) {
              StorageConfig = new global::grpsApp1.StorageConfig();
            }
            input.ReadMessage(StorageConfig);
            break;
          }
          case 26: {
            if (scalePolicy_ == null) {
              ScalePolicy = new global::grpsApp1.ScalePolicy();
            }
            input.ReadMessage(ScalePolicy);
            break;
          }
          case 34: {
            NetworkId = input.ReadString();
            break;
          }
          case 42: {
            subnetIds_.AddEntriesFrom(ref input, _repeated_subnetIds_codec);
            break;
          }
          case 48: {
            AssignPublicIps = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ServerlessDatabase : pb::IMessage<ServerlessDatabase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerlessDatabase> _parser = new pb::MessageParser<ServerlessDatabase>(() => new ServerlessDatabase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerlessDatabase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpsApp1.DatabaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerlessDatabase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerlessDatabase(ServerlessDatabase other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerlessDatabase Clone() {
      return new ServerlessDatabase(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerlessDatabase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerlessDatabase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerlessDatabase other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ZonalDatabase : pb::IMessage<ZonalDatabase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZonalDatabase> _parser = new pb::MessageParser<ZonalDatabase>(() => new ZonalDatabase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZonalDatabase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpsApp1.DatabaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZonalDatabase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZonalDatabase(ZonalDatabase other) : this() {
      zoneId_ = other.zoneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZonalDatabase Clone() {
      return new ZonalDatabase(this);
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 1;
    private string zoneId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZonalDatabase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZonalDatabase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZoneId != other.ZoneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ZoneId.Length != 0) hash ^= ZoneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ZoneId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ZoneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ZoneId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ZoneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ZoneId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZonalDatabase other) {
      if (other == null) {
        return;
      }
      if (other.ZoneId.Length != 0) {
        ZoneId = other.ZoneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ZoneId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ZoneId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegionalDatabase : pb::IMessage<RegionalDatabase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegionalDatabase> _parser = new pb::MessageParser<RegionalDatabase>(() => new RegionalDatabase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegionalDatabase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpsApp1.DatabaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegionalDatabase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegionalDatabase(RegionalDatabase other) : this() {
      regionId_ = other.regionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegionalDatabase Clone() {
      return new RegionalDatabase(this);
    }

    /// <summary>Field number for the "region_id" field.</summary>
    public const int RegionIdFieldNumber = 1;
    private string regionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionId {
      get { return regionId_; }
      set {
        regionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegionalDatabase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegionalDatabase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionId != other.RegionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegionId.Length != 0) hash ^= RegionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RegionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RegionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegionalDatabase other) {
      if (other == null) {
        return;
      }
      if (other.RegionId.Length != 0) {
        RegionId = other.RegionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RegionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RegionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScalePolicy : pb::IMessage<ScalePolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScalePolicy> _parser = new pb::MessageParser<ScalePolicy>(() => new ScalePolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScalePolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpsApp1.DatabaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScalePolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScalePolicy(ScalePolicy other) : this() {
      switch (other.ScaleTypeCase) {
        case ScaleTypeOneofCase.FixedScale:
          FixedScale = other.FixedScale.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScalePolicy Clone() {
      return new ScalePolicy(this);
    }

    /// <summary>Field number for the "fixed_scale" field.</summary>
    public const int FixedScaleFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpsApp1.ScalePolicy.Types.FixedScale FixedScale {
      get { return scaleTypeCase_ == ScaleTypeOneofCase.FixedScale ? (global::grpsApp1.ScalePolicy.Types.FixedScale) scaleType_ : null; }
      set {
        scaleType_ = value;
        scaleTypeCase_ = value == null ? ScaleTypeOneofCase.None : ScaleTypeOneofCase.FixedScale;
      }
    }

    private object scaleType_;
    /// <summary>Enum of possible cases for the "scale_type" oneof.</summary>
    public enum ScaleTypeOneofCase {
      None = 0,
      FixedScale = 1,
    }
    private ScaleTypeOneofCase scaleTypeCase_ = ScaleTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScaleTypeOneofCase ScaleTypeCase {
      get { return scaleTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScaleType() {
      scaleTypeCase_ = ScaleTypeOneofCase.None;
      scaleType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScalePolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScalePolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FixedScale, other.FixedScale)) return false;
      if (ScaleTypeCase != other.ScaleTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) hash ^= FixedScale.GetHashCode();
      hash ^= (int) scaleTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) {
        output.WriteRawTag(10);
        output.WriteMessage(FixedScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) {
        output.WriteRawTag(10);
        output.WriteMessage(FixedScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FixedScale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScalePolicy other) {
      if (other == null) {
        return;
      }
      switch (other.ScaleTypeCase) {
        case ScaleTypeOneofCase.FixedScale:
          if (FixedScale == null) {
            FixedScale = new global::grpsApp1.ScalePolicy.Types.FixedScale();
          }
          FixedScale.MergeFrom(other.FixedScale);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::grpsApp1.ScalePolicy.Types.FixedScale subBuilder = new global::grpsApp1.ScalePolicy.Types.FixedScale();
            if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) {
              subBuilder.MergeFrom(FixedScale);
            }
            input.ReadMessage(subBuilder);
            FixedScale = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::grpsApp1.ScalePolicy.Types.FixedScale subBuilder = new global::grpsApp1.ScalePolicy.Types.FixedScale();
            if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) {
              subBuilder.MergeFrom(FixedScale);
            }
            input.ReadMessage(subBuilder);
            FixedScale = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ScalePolicy message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FixedScale : pb::IMessage<FixedScale>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FixedScale> _parser = new pb::MessageParser<FixedScale>(() => new FixedScale());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FixedScale> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::grpsApp1.ScalePolicy.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedScale() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedScale(FixedScale other) : this() {
          size_ = other.size_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedScale Clone() {
          return new FixedScale(this);
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 1;
        private long size_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Size {
          get { return size_; }
          set {
            size_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FixedScale);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FixedScale other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Size != other.Size) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Size != 0L) hash ^= Size.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Size != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Size);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Size != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Size);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Size != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FixedScale other) {
          if (other == null) {
            return;
          }
          if (other.Size != 0L) {
            Size = other.Size;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Size = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Size = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class StorageConfig : pb::IMessage<StorageConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StorageConfig> _parser = new pb::MessageParser<StorageConfig>(() => new StorageConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpsApp1.DatabaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageConfig(StorageConfig other) : this() {
      storageOptions_ = other.storageOptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageConfig Clone() {
      return new StorageConfig(this);
    }

    /// <summary>Field number for the "storage_options" field.</summary>
    public const int StorageOptionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::grpsApp1.StorageOption> _repeated_storageOptions_codec
        = pb::FieldCodec.ForMessage(10, global::grpsApp1.StorageOption.Parser);
    private readonly pbc::RepeatedField<global::grpsApp1.StorageOption> storageOptions_ = new pbc::RepeatedField<global::grpsApp1.StorageOption>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::grpsApp1.StorageOption> StorageOptions {
      get { return storageOptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!storageOptions_.Equals(other.storageOptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= storageOptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      storageOptions_.WriteTo(output, _repeated_storageOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      storageOptions_.WriteTo(ref output, _repeated_storageOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += storageOptions_.CalculateSize(_repeated_storageOptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageConfig other) {
      if (other == null) {
        return;
      }
      storageOptions_.Add(other.storageOptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            storageOptions_.AddEntriesFrom(input, _repeated_storageOptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            storageOptions_.AddEntriesFrom(ref input, _repeated_storageOptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StorageOption : pb::IMessage<StorageOption>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StorageOption> _parser = new pb::MessageParser<StorageOption>(() => new StorageOption());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageOption> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpsApp1.DatabaseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageOption() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageOption(StorageOption other) : this() {
      storageTypeId_ = other.storageTypeId_;
      groupCount_ = other.groupCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageOption Clone() {
      return new StorageOption(this);
    }

    /// <summary>Field number for the "storage_type_id" field.</summary>
    public const int StorageTypeIdFieldNumber = 1;
    private string storageTypeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StorageTypeId {
      get { return storageTypeId_; }
      set {
        storageTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group_count" field.</summary>
    public const int GroupCountFieldNumber = 2;
    private long groupCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GroupCount {
      get { return groupCount_; }
      set {
        groupCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageOption);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageOption other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StorageTypeId != other.StorageTypeId) return false;
      if (GroupCount != other.GroupCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StorageTypeId.Length != 0) hash ^= StorageTypeId.GetHashCode();
      if (GroupCount != 0L) hash ^= GroupCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StorageTypeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StorageTypeId);
      }
      if (GroupCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(GroupCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StorageTypeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StorageTypeId);
      }
      if (GroupCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(GroupCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StorageTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageTypeId);
      }
      if (GroupCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GroupCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageOption other) {
      if (other == null) {
        return;
      }
      if (other.StorageTypeId.Length != 0) {
        StorageTypeId = other.StorageTypeId;
      }
      if (other.GroupCount != 0L) {
        GroupCount = other.GroupCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StorageTypeId = input.ReadString();
            break;
          }
          case 16: {
            GroupCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StorageTypeId = input.ReadString();
            break;
          }
          case 16: {
            GroupCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
